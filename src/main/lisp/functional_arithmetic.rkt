(define zero (lambda(inc_f) (lambda(seed) seed)))
(define one (lambda(inc_f) (lambda(seed) (inc_f seed))))
(define two (lambda(inc_f) (lambda(seed) (inc_f (inc_f seed)))))

(define (plus a b) (lambda(inc_f) (lambda(seed) ((a inc_f)((b inc_f) seed)))))
(define (add-1 number)
  (lambda(inc_f)
    (lambda(seed) (inc_f ((number inc_f) seed)))))
(define (inc x) (+ x 1))

(((plus two two) inc) 0)
((zero inc) 0)
((one inc) 0)
((two inc) 0)
(((add-1 one) inc) 0)
(((add-1 two) inc) 0)
((((add-1 one) one) inc) 0)
((((add-1 two) one) inc) 0)
((((add-1 one) two) inc) 0)
((((add-1 two) two) inc) 0)
(((((add-1 two) two) two) inc) 0)